/* BARlib.bsh
 * IJ BAR: https://github.com/tferr/Scripts#scripts
 *
 * Common BAR library to be placed in BAR/lib. This file hosts methods to
 * be used across all your scripts. To add this scripted classe, append the
 * following to your files:
 *     addClassPath(bar.Utils.getBARDir());
 *     importCommands("lib/");
 *     BARlib();
 * Then, initiate it using:
 *     lib = new BARlib();
 *     lib.confirmLoading();
 */


BARlib() {
public class BARlib {

	///////////  UTILITIES  ///////////
	/** Acknowledges accessibility to this file */
	void confirmLoading() {
		ij.IJ.showMessage("BAR lib successfully loaded!");
	}

	/** Returns text from the system clipboard or an empty string if no text was found */
	String getCliboardText() {
		import java.awt.Toolkit;
		import java.awt.datatransfer.Clipboard;
		import java.awt.datatransfer.DataFlavor;
		import java.awt.datatransfer.Transferable;

		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Clipboard clipboard = toolkit.getSystemClipboard();
		String s = null;
		try {
			s = (String)clipboard.getData(DataFlavor.stringFlavor);
		} catch (Exception) {
			s = "";
		}
		return s;
	}

	/** Returns a random uuid */
	String randomString() {
		import java.util.UUID;
		return UUID.randomUUID().toString();
	}


	///////////  CALCULATIONS  ///////////
	/** Returns the greatest common divisor between 2 numbers */
	int gcd(a, b) {
		if (b==0) return a;
		return gcd(b, a%b);
	}

	/** Returns the greatest common divisor between 2 numbers */
	int gcdCommons(a, b) {
		import org.apache.commons.math3.util.ArithmeticUtils;
		return ArithmeticUtils.gcd(a,b);
	}

	/** Returns surface area and volume of a sphere of radius r */
	double[] sphereCalc(r) {
		import java.Math;
		sph_area = 4.0 * Math.PI * (r*r);
		sph_vol = 4.0/3.0 * Math.PI * (r*r*r);
		return new double[]{sph_area, sph_vol};
	}

}
}
